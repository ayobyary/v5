-- Create database
CREATE DATABASE IF NOT EXISTS style_database;
USE style_database;

-- Create STYLE table
CREATE TABLE IF NOT EXISTS STYLE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    short_description TEXT,
    main_image VARCHAR(255)
);

-- Create ACCESSORY table
CREATE TABLE IF NOT EXISTS ACCESSORY (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    image_url VARCHAR(255),
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create BRAND table
CREATE TABLE IF NOT EXISTS BRAND (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create PSYCHOLOGICAL_PROFILE table
CREATE TABLE IF NOT EXISTS PSYCHOLOGICAL_PROFILE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create EVENT table
CREATE TABLE IF NOT EXISTS EVENT (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create LOCATION table
CREATE TABLE IF NOT EXISTS LOCATION (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create COMBINATION table
CREATE TABLE IF NOT EXISTS COMBINATION (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create CHILD_STYLE table
CREATE TABLE IF NOT EXISTS CHILD_STYLE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    parent_style_id INT,
    name VARCHAR(255) NOT NULL,
    FOREIGN KEY (parent_style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create PARENT_STYLE table
CREATE TABLE IF NOT EXISTS PARENT_STYLE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    child_style_id INT,
    name VARCHAR(255) NOT NULL,
    FOREIGN KEY (child_style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create MOOD table
CREATE TABLE IF NOT EXISTS MOOD (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create COLOR_PALETTE table
CREATE TABLE IF NOT EXISTS COLOR_PALETTE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    colors TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create FABRIC table
CREATE TABLE IF NOT EXISTS FABRIC (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create ICON table
CREATE TABLE IF NOT EXISTS ICON (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    image_url VARCHAR(255),
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create SYMBOL table
CREATE TABLE IF NOT EXISTS SYMBOL (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create CRITICISM table
CREATE TABLE IF NOT EXISTS CRITICISM (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create HAIR_AND_MAKEUP table
CREATE TABLE IF NOT EXISTS HAIR_AND_MAKEUP (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create TREND_STATUS table
CREATE TABLE IF NOT EXISTS TREND_STATUS (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    status VARCHAR(50),
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create MEDIA_REFERENCE table
CREATE TABLE IF NOT EXISTS MEDIA_REFERENCE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create HYBRID_STYLE table
CREATE TABLE IF NOT EXISTS HYBRID_STYLE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create USAGE_TODAY table
CREATE TABLE IF NOT EXISTS USAGE_TODAY (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create HISTORICAL_EVOLUTION table
CREATE TABLE IF NOT EXISTS HISTORICAL_EVOLUTION (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create CONTRASTING_STYLE table
CREATE TABLE IF NOT EXISTS CONTRASTING_STYLE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create RELATED_STYLE table
CREATE TABLE IF NOT EXISTS RELATED_STYLE (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    name VARCHAR(255) NOT NULL,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create AGE_GROUP table
CREATE TABLE IF NOT EXISTS AGE_GROUP (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Create ORIGIN_LOCATION table
CREATE TABLE IF NOT EXISTS ORIGIN_LOCATION (
    id INT PRIMARY KEY AUTO_INCREMENT,
    style_id INT,
    description TEXT,
    FOREIGN KEY (style_id) REFERENCES STYLE(id) ON DELETE CASCADE
);

-- Add indexes for better performance
CREATE INDEX idx_style_name ON STYLE(name);
CREATE INDEX idx_brand_name ON BRAND(name);
CREATE INDEX idx_fabric_name ON FABRIC(name);
CREATE INDEX idx_event_name ON EVENT(name);
CREATE INDEX idx_location_name ON LOCATION(name); 